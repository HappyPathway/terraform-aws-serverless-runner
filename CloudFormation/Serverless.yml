AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: "Create Serverless application."
Parameters:
  Environment:
    Description: Name of the AWS deployment environment
    Type: String
  Namespace:
    Description: Prefix for all resources generated by the pipeline
    Type: String
  ServerlessRoleArn:
    Description: Execution role of the lambda function
    Type: String
  VpcId:
    Description: VPC ID passed to resources, resolved via SSM
    Type: String
  IslandSubnetA:
    Description: Subnets used for Service Template, passed via foundational.json
    Type: String
  IslandSubnetB:
    Description: Subnets used for Service Template, passed via foundational.json
    Type: String
  RoutableSubnetA:
    Description: Subnets used for Service Template, passed via foundational.json
    Type: String
  RoutableSubnetB:
    Description: Subnets used for Service Template, passed via foundational.json
    Type: String
  EcsCluster:
    Description: Cluster used to create and execute tasks
    Type: String
  LogGroup:
    Description: Log group for task logging
    Type: String
  EcsTaskRoleArn:
    Description: ARN for role to create tasks in ECS
    Type: String
  EcsTaskExecutionRoleArn:
    Description: ARN for role to execute tasks in ECS
    Type: String
  Image:
    Description: The container to run tasks in
    Type: String
  GithubSecretArn:
    Description: Secret ARN of PAT for github actions
    Type: String
  Tag:
    Description: Used as the aws log stream prefix
    Type: String
  ContainerSecurityGroup:
    Description: Security group to apply to containers
    Type: String
  ServerlessSecurityGroup:
    Description: Security group to apply to lambda
    Type: String
  VPCESecurityGroup:
    Description: Security group to apply to vpc endpoint
    Type: String
  GitHookSecret:
    Description: Secret for GithubHook
    Type: String
  RunnerGroup:
    Description: Name of the runner group
    Type: String
  RunnerLabels:
    Description: Comma-seperated list of runner labels
    Type: String

Resources:
  RunnerTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      TaskRoleArn: !Ref EcsTaskRoleArn
      ExecutionRoleArn: !Ref EcsTaskExecutionRoleArn
      Family: !Ref Namespace
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 2048
      Memory: 4096
      ContainerDefinitions:
        - Name: !Ref Namespace
          Image: !Ref Image
          Essential: true
          Cpu: 2048
          Memory: 4096
          Environment:
            - Name: NAMESPACE
              Value: !Ref Namespace
            - Name: RUNNER_GROUP
              Value: !Ref RunnerGroup
            - Name: RUNNER_LABELS
              Value: !Ref RunnerLabels
          Command:
            - "./entrypoint_token.sh"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: !Ref Tag

  VpcEndpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      SecurityGroupIds:
        - !Ref VPCESecurityGroup
      ServiceName: !Sub com.amazonaws.${AWS::Region}.execute-api
      SubnetIds:
        - !Ref RoutableSubnetA
        - !Ref RoutableSubnetB
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  HookApi:
    Type: "AWS::Serverless::Api"
    Properties:
      DefinitionBody:
        openapi: "3.0.0"
        info:
          title: !Sub "${Namespace}-github-workflow_job hook"
        paths:
          /workflow/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
                - in: path
                  name: proxy
                  required: true
              x-amazon-apigateway-integration:
                uri: !Sub "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function.Arn}/invocations"
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: "aws_proxy"
        x-amazon-apigateway-policy:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal: "*"
              Action:
                - execute-api:Invoke
              Resource: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
      EndpointConfiguration:
        Type: PRIVATE
        VPCEndpointIds:
          - !Ref VpcEndpoint
      Auth:
        ResourcePolicy:
          IntrinsicVpceWhitelist:
            - !Ref VpcEndpoint
      StageName: "prod"
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"

  Function:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Sub "${Namespace}"
      Handler: handler.handler
      Runtime: python3.9
      CodeUri: ../runnerhook
      Description: >-
        Github Runner webhook handler
      MemorySize: 128
      Timeout: 30
      Role: !Ref ServerlessRoleArn
      Environment:
        Variables:
          AWS_ENV: !Ref Environment
          GITHUB_SECRET_ARN: !Ref GithubSecretArn
          GITHUB_API_URL: https://github.mmm.com/api/v3
          GITHUB_HOOK_SECRET: !Ref GitHookSecret
          ECS_CLUSTER: !Ref EcsCluster
          TASK_DEFINITION_ARN: !Ref RunnerTaskDefinition
          CONTAINER_NAME: !Ref Namespace
          CONTAINER_SECURITY_GROUP: !Ref ContainerSecurityGroup
          SUBNET_A: !Ref IslandSubnetA
          SUBNET_B: !Ref IslandSubnetB
          RUNNER_LABELS: !Ref RunnerLabels
      VpcConfig:
        SecurityGroupIds:
          - !Ref ServerlessSecurityGroup
        SubnetIds:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /workflow/{proxy+}
            Method: ANY
            RestApiId:
              Ref: HookApi

  HookUrlSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      DataType: text
      Description: The API endpoint for runner github wehbook
      Name: !Sub "${Namespace}HookUrl"
      Tier: Standard
      Type: String
      Value: !Sub "https://${HookApi}-${VpcEndpoint}.execute-api.${AWS::Region}.${AWS::URLSuffix}/prod/workflow/run"

Outputs:
  FunctionName:
    Value: !Ref Function
  WebHookUrl:
    Value: !GetAtt HookUrlSSMParameter.Value
