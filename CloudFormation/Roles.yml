AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Namespace:
    Description: Prefix for all resources generated by the pipeline
    Type: String
  GithubSecretArn:
    Description: Secret ARN of PAT for github actions
    Type: String
  HookSecretArn:
    Description: Secret ARN of PAT for github actions
    Type: String
  SSIPrefix:
    Description: Prefix used for resources needing boundary permissions
    Type: String

Resources:
  EcsTaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${Namespace}-EcsTaskRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - "sts:AssumeRole"
              - "sts:TagSession"
      PermissionsBoundary: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/3mhis-iam-boundary-ecs-${SSIPrefix}
      Policies:
        - PolicyName: change-set-permissions
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                Resource: "*"

  EcsTaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${Namespace}-EcsTaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: "sts:AssumeRole"
      PermissionsBoundary: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/3mhis-iam-boundary-ecs-${SSIPrefix}
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: secret-lookup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Ref GithubSecretArn

  RunnerHookRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "${Namespace}-ServerlessRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      PermissionsBoundary: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/3mhis-iam-boundary-ecs-${SSIPrefix}
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: secret-lookup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Ref GithubSecretArn
                  - !Ref HookSecretArn
        - PolicyName: pass-ecs-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource:
                  - !GetAtt EcsTaskExecutionRole.Arn
                  - !GetAtt EcsTaskRole.Arn
        - PolicyName: ecs-tasks
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecs:RunTask"
                Resource:
                  - "*"

Outputs:
  EcsTaskRoleArn:
    Value: !GetAtt EcsTaskRole.Arn
  EcsTaskExecutionRoleArn:
    Value: !GetAtt EcsTaskExecutionRole.Arn
  RunnerHookRoleArn:
    Value: !GetAtt RunnerHookRole.Arn
