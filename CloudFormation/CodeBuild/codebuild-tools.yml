AWSTemplateFormatVersion: "2010-09-09"
Description: CodeBuild jobs

Parameters:
  DeployerRoleName:
    Description: Role to use for pipeline
    Type: String
  Namespace:
    Description: Prefix for all resources generated by the pipeline
    Type: String
  BuildSpecDir:
    Description: Location of buildspec files for codebuild
    Type: String
  VpcId:
    Description: VPC ID passed to resources, resolved via SSM
    Type: AWS::SSM::Parameter::Value<String>
  IslandSubnetA:
    Description: Subnet ID passed to resources, resolved via SSM
    Type: AWS::SSM::Parameter::Value<String>
  IslandSubnetB:
    Description: Subnet ID passed to resources, resovled via SSM
    Type: AWS::SSM::Parameter::Value<String>

Resources:
  CodeBuildSecurityGroup:
    Properties:
      GroupDescription: Security group used for Egress from CodeBuild
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
          Description: Allow egress of anytype to anywhere
      VpcId: !Ref VpcId
    Type: AWS::EC2::SecurityGroup

  BuildAppBuild:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: "false"
      Cache:
        Type: NO_CACHE
      Description: !Sub "${Namespace} application build project"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: public.ecr.aws/sam/build-python3.9
        Type: LINUX_CONTAINER
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
      Name: !Sub "${Namespace}-build-appbuild"
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Source:
        BuildSpec: !Sub ${BuildSpecDir}/build-appbuild.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value: !Sub "${Namespace}-build-appbuild"
        - Key: Environment
          Value: "tools"
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project

  BuildAppTest:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: "false"
      Cache:
        Type: NO_CACHE
      Description: !Sub "${Namespace} application test project"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: public.ecr.aws/sam/build-python3.9
        Type: LINUX_CONTAINER
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
      Name: !Sub "${Namespace}-build-apptest"
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Source:
        BuildSpec: !Sub ${BuildSpecDir}/build-apptest.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value: !Sub "${Namespace}-build-apptest"
        - Key: Environment
          Value: "tools"
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project

  BuildPackageTools:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: "false"
      Cache:
        Type: NO_CACHE
      Description: !Sub "${Namespace} package tools build project"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
      Name: !Sub "${Namespace}-build-package-tools"
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Source:
        BuildSpec: !Sub ${BuildSpecDir}/build-package-tools.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value: !Sub "${Namespace}-build-package-tools"
        - Key: Environment
          Value: "tools"
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project

  BuildPackageEnvs:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      BadgeEnabled: "false"
      Cache:
        Type: NO_CACHE
      Description: !Sub "${Namespace} package envs build project"
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: LINUX_CONTAINER
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
      Name: !Sub "${Namespace}-build-package-envs"
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Source:
        BuildSpec: !Sub ${BuildSpecDir}/build-package-envs.yml
        Type: CODEPIPELINE
      Tags:
        - Key: Name
          Value: !Sub "${Namespace}-build-package-envs"
        - Key: Environment
          Value: "tools"
      TimeoutInMinutes: 60
    Type: AWS::CodeBuild::Project

  Image:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Namespace}-image-build
      Description: Builds the docker image
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub ${BuildSpecDir}/image.yml
      Tags:
        - Key: Name
          Value: !Sub "${Namespace}-image-build"
        - Key: Environment
          Value: "tools"
      VpcConfig:
        SecurityGroupIds:
          - !Ref "CodeBuildSecurityGroup"
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: "LINUX_CONTAINER"
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Namespace}
          - Name: IMAGE_REPOSITORY_NAME
            Value: !Sub ${Namespace}
          - Name: DOCKERFILE_PATH
            Value: Dockerfile

  ToolsUpdateSSIDeployer:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${Namespace}-update-ssi-tools-deployer
      Description: Updates SSI deployer product
      ServiceRole: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/${DeployerRoleName}"
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub ${BuildSpecDir}/build-ssi-deployer-updater.yml
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        Type: "LINUX_CONTAINER"
      VpcConfig:
        SecurityGroupIds:
          - !Ref CodeBuildSecurityGroup
        Subnets:
          - !Ref IslandSubnetA
          - !Ref IslandSubnetB
        VpcId: !Ref VpcId
